{"version":3,"file":"update.route.js","sourceRoot":"","sources":["../../../../src/routes/travels/put/update.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAqD;AACrD,gDAAiD;AACjD,6CAA+C;AAG/C,8CAAmC;AACnC,8CAA+E;AA2B/E,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAC7B;;;;OAIG;IACH,YAAoB,eAA+B,EAAU,OAAsB;QAA/D,oBAAe,GAAf,eAAe,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAe;IACnF,CAAC;IAED,KAAK,CAAC,OAAgB;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC;aACjE,IAAI,CACD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACV,CAAC;CACJ,CAAA;AAfY,oBAAoB;IAzBhC,YAAK,CAAC;QACH,IAAI,EAAE,mBAAmB;QACzB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,EAAE,EAAE,sBAAY;iBACnB;gBACD,OAAO,EAAE,wBAAc;aAC1B;YACD,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,yBAAe;iBACvB;aACJ;YACD,WAAW,EAAE,mBAAmB;YAChC,KAAK,EAAE,qEAAqE;YAC5E,IAAI,EAAE,CAAE,KAAK,EAAE,SAAS,CAAE;SAC7B;KACJ,CAAC;qCAOuC,yBAAc,EAAmB,sBAAa;GAN1E,oBAAoB,CAehC;AAfY,oDAAoB","sourcesContent":["import {OnPut, Request, Route} from '@hapiness/core';\nimport {TravelsService} from '../../../services';\nimport {LoggerService} from '@hapiness/logger';\nimport {Observable} from 'rxjs';\nimport {Travel} from '../../../interfaces';\nimport {tap} from 'rxjs/operators';\nimport {ID_PARAMETER, TRAVEL_PAYLOAD, TRAVEL_RESPONSE} from '../../../schemas';\n\n@Route({\n    path: '/api/travels/{id}',\n    method: 'PUT',\n    config: {\n        validate: {\n            params: {\n                id: ID_PARAMETER\n            },\n            payload: TRAVEL_PAYLOAD\n        },\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                200: TRAVEL_RESPONSE\n            }\n        },\n        description: 'Update one travel',\n        notes: 'Update the travel for the given id in path parameter and returns it',\n        tags: [ 'api', 'travels' ]\n    }\n})\nexport class PutUpdateTravelRoute implements OnPut {\n    /**\n     * Class constructor\n     * @param _travelsService\n     * @param _logger\n     */\n    constructor(private _travelsService: TravelsService, private _logger: LoggerService) {\n    }\n\n    onPut(request: Request): Observable<Travel> {\n        return this._travelsService.update(request.params.id, request.payload)\n            .pipe(\n                tap(_ => this._logger.info(_))\n            );\n    }\n}\n"]}