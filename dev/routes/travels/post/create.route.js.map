{"version":3,"file":"create.route.js","sourceRoot":"","sources":["../../../../src/routes/travels/post/create.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAA2E;AAC3E,gDAAiD;AACjD,6CAA+C;AAE/C,8CAAmC;AACnC,8CAAiE;AAwBjE,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAC9B;;;;OAIG;IACH,YAAoB,eAA+B,EAAU,OAAsB;QAA/D,oBAAe,GAAf,eAAe,CAAgB;QAAU,YAAO,GAAP,OAAO,CAAe;IACnF,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAgB;QACnB,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;aAC9C,IAAI,CACD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACV,CAAC;CACJ,CAAA;AAnBY,qBAAqB;IAtBjC,YAAK,CAAC;QACH,IAAI,EAAE,cAAc;QACpB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,OAAO,EAAE,wBAAc;aAC1B;YACD,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,yBAAe;iBACvB;aACJ;YACD,WAAW,EAAE,mBAAmB;YAChC,KAAK,EAAE,oCAAoC;YAC3C,IAAI,EAAE,CAAE,KAAK,EAAE,SAAS,CAAE;SAC7B;KACJ,CAAC;qCAOuC,yBAAc,EAAmB,sBAAa;GAN1E,qBAAqB,CAmBjC;AAnBY,sDAAqB","sourcesContent":["import {HTTPHandlerResponse, OnPost, Request, Route} from '@hapiness/core';\nimport {TravelsService} from '../../../services';\nimport {LoggerService} from '@hapiness/logger';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {TRAVEL_PAYLOAD, TRAVEL_RESPONSE} from '../../../schemas';\n\n@Route({\n    path: '/api/travels',\n    method: 'POST',\n    config: {\n        validate: {\n            payload: TRAVEL_PAYLOAD\n        },\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                201: TRAVEL_RESPONSE\n            }\n        },\n        description: 'Create one travel',\n        notes: 'Create a new travel and returns it',\n        tags: [ 'api', 'travels' ]\n    }\n})\nexport class PostCreateTravelRoute implements OnPost {\n    /**\n     * Class constructor\n     * @param _travelsService\n     * @param _logger\n     */\n    constructor(private _travelsService: TravelsService, private _logger: LoggerService) {\n    }\n\n    /**\n     *\n     * @param request\n     */\n    onPost(request: Request): Observable<HTTPHandlerResponse> {\n        return this._travelsService.create(request.payload)\n            .pipe(\n                tap(_ => this._logger.info(_))\n            );\n    }\n}\n"]}