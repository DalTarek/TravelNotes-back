{"version":3,"file":"travels-document.service.js","sourceRoot":"","sources":["../../src/services/travels-document.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAA0C;AAC1C,2CAAmD;AACnD,+BAAsC;AAEtC,8CAAmC;AAEnC,+CAA8C;AAG9C,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAG/B,YAAoB,mBAAuC;QAAvC,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,qBAAW,CAAC,CAAC;IAC7F,CAAC;IAED;;;;OAIG;IACH,IAAI;QACA,OAAO,WAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAC/B,IAAI,CACD,eAAG,CAAC,CAAC,IAAwB,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CACzG,CAAC;IACV,CAAC;IAED,QAAQ,CAAC,EAAU;QACf,OAAO,WAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACnC,IAAI,CACD,eAAG,CAAC,CAAC,GAAqB,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CACnE,CAAC;IACV,CAAC;IAED,MAAM,CAAC,MAAc;QACjB,OAAO,WAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aACrC,IAAI,CACD,eAAG,CAAC,CAAC,GAAqB,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAC/C,CAAC;IACV,CAAC;IAED,iBAAiB,CAAC,EAAU,EAAE,MAAc;QACxC,OAAO,WAAI,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;aACnE,IAAI,CACD,eAAG,CAAC,CAAC,GAAqB,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CACnE,CAAC;IACV,CAAC;IAED,iBAAiB,CAAC,EAAU;QACxB,OAAO,WAAI,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;aAC5C,IAAI,CACD,eAAG,CAAC,CAAC,GAAqB,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CACnE,CAAA;IACT,CAAC;CACJ,CAAA;AA9CY,sBAAsB;IADlC,iBAAU,EAAE;qCAIgC,0BAAkB;GAHlD,sBAAsB,CA8ClC;AA9CY,wDAAsB","sourcesContent":["import {Injectable} from '@hapiness/core';\nimport {MongoClientService} from '@hapiness/mongo';\nimport {from, Observable} from 'rxjs';\nimport {MongooseDocument} from 'mongoose';\nimport {map} from 'rxjs/operators';\nimport {Travel} from '../interfaces';\nimport {TravelModel} from '../models/travels';\n\n@Injectable()\nexport class TravelsDocumentService {\n    private _document: any;\n\n    constructor(private _mongoClientService: MongoClientService) {\n        this._document = this._mongoClientService.getModel({ adapter: 'mongoose' }, TravelModel);\n    }\n\n    /**\n     * Call mongoose method, call toJSON on each result and returns Travel[] or undefined\n     *\n     * @return {Observable<Travel[] | void>}\n     */\n    find(): Observable<Travel[] | void> {\n        return from(this._document.find({}))\n            .pipe(\n                map((docs: MongooseDocument[]) => (!!docs && docs.length > 0) ? docs.map(_ => _.toJSON()) : undefined)\n            );\n    }\n\n    findById(id: string): Observable<Travel | void> {\n        return from(this._document.findById(id))\n            .pipe(\n                map((doc: MongooseDocument) => !!doc ? doc.toJSON() : undefined)\n            );\n    }\n\n    create(travel: Travel): Observable<Travel> {\n        return from(this._document.create(travel))\n            .pipe(\n                map((doc: MongooseDocument) => doc.toJSON())\n            );\n    }\n\n    findByIdAndUpdate(id: string, travel: Travel): Observable<Travel | void> {\n        return from(this._document.findByIdAndUpdate(id, travel, { new: true }))\n            .pipe(\n                map((doc: MongooseDocument) => !!doc ? doc.toJSON() : undefined)\n            );\n    }\n\n    findByIdAndRemove(id: string): Observable<Travel | void> {\n        return from(this._document.findByIdAndRemove(id))\n            .pipe(\n                map((doc: MongooseDocument) => !!doc ? doc.toJSON() : undefined)\n            )\n    }\n}\n"]}